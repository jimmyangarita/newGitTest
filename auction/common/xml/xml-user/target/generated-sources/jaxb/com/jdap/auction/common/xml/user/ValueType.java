//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.11 at 02:45:57 PM EST 
//


package com.jdap.auction.common.xml.user;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for valueType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="valueType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="BIGDECIMAL"/>
 *     &lt;enumeration value="BINARY"/>
 *     &lt;enumeration value="BOOLEAN"/>
 *     &lt;enumeration value="CLOB"/>
 *     &lt;enumeration value="FLOAT"/>
 *     &lt;enumeration value="INTEGER"/>
 *     &lt;enumeration value="LONG"/>
 *     &lt;enumeration value="NULL"/>
 *     &lt;enumeration value="STRING"/>
 *     &lt;enumeration value="TIME"/>
 *     &lt;enumeration value="TIME_FROM_JAN1_70_00_00_00"/>
 *     &lt;enumeration value="TIME_FROM_MIDNIGHT"/>
 *     &lt;enumeration value="TIME_FROM_RESTART"/>
 *     &lt;enumeration value="ULONG"/>
 *     &lt;enumeration value="URL"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "valueType", namespace = "http://xmlns.jdap.com/auction/Common/v2")
@XmlEnum
public enum ValueType {

    BIGDECIMAL("BIGDECIMAL"),
    BINARY("BINARY"),
    BOOLEAN("BOOLEAN"),
    CLOB("CLOB"),
    FLOAT("FLOAT"),
    INTEGER("INTEGER"),
    LONG("LONG"),
    NULL("NULL"),
    STRING("STRING"),
    TIME("TIME"),
    @XmlEnumValue("TIME_FROM_JAN1_70_00_00_00")
    TIME_FROM_JAN_1_70_00_00_00("TIME_FROM_JAN1_70_00_00_00"),
    TIME_FROM_MIDNIGHT("TIME_FROM_MIDNIGHT"),
    TIME_FROM_RESTART("TIME_FROM_RESTART"),
    ULONG("ULONG"),
    URL("URL");
    private final String value;

    ValueType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ValueType fromValue(String v) {
        for (ValueType c: ValueType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
