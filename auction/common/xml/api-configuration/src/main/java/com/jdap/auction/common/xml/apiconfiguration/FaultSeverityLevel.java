//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.04 at 05:50:27 PM EST 
//


package com.jdap.auction.common.xml.apiconfiguration;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for FaultSeverityLevel.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="FaultSeverityLevel">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Fatal"/>
 *     &lt;enumeration value="Error"/>
 *     &lt;enumeration value="Warning"/>
 *     &lt;enumeration value="Informational"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "FaultSeverityLevel")
@XmlEnum
public enum FaultSeverityLevel {


    /**
     * Highest severity level. Unexpected errors that occur during normal execution. Fatal exceptions or any other serious problems that require immediate attention from the System Administrator.
     * 
     */
    @XmlEnumValue("Fatal")
    FATAL("Fatal"),

    /**
     * The Error level designates error events that might still allow the application to continue running. Administrator auction can be delayed in this severity.
     * 
     */
    @XmlEnumValue("Error")
    ERROR("Error"),

    /**
     * The Warning level designates potentially harmful situations. Any potential problem that should be reviewed by the System Administrator.
     * 
     */
    @XmlEnumValue("Warning")
    WARNING("Warning"),

    /**
     * The Warning level designates potentially harmful situations. Any potential problem that should be reviewed by the System Administrator.
     * 
     */
    @XmlEnumValue("Informational")
    INFORMATIONAL("Informational");
    private final String value;

    FaultSeverityLevel(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static FaultSeverityLevel fromValue(String v) {
        for (FaultSeverityLevel c: FaultSeverityLevel.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
